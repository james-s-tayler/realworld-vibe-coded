services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "YourStrong@Passw0rd"
      MSSQL_PID: "Express"
    ports:
      - "1433:1433"
    healthcheck:
      test: ["CMD", "/opt/mssql-tools18/bin/sqlcmd", "-S", "localhost", "-U", "sa", "-P", "YourStrong@Passw0rd", "-Q", "SELECT 1", "-C"]
      interval: 3s
      timeout: 3s
      retries: 10
      start_period: 5s

  api:
    build:
      context: ../../
      dockerfile: Test/e2e/Dockerfile.api
    depends_on:
      sqlserver:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: http://+:5000
      ConnectionStrings__DefaultConnection: "Server=sqlserver,1433;Database=Conduit;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=True;MultipleActiveResultSets=true"
      Audit__LogsPath: /app/Logs/Audit
      Serilog__WriteTo__1__Args__Path: /app/Logs/Server.Web/serilog.txt
    ports:
      - "5000:5000"
    volumes:
      - ../../Logs:/app/Logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/swagger/index.html"]
      interval: 2s
      timeout: 5s
      retries: 20
      start_period: 10s
    
  playwright:
    build:
      context: ./
      dockerfile: Dockerfile.playwright
    depends_on:
      api:
        condition: service_healthy
    volumes:
      - ../../Reports:/Reports
    environment:
      - PLAYWRIGHT_BASE_URL=http://api:5000
      - CI=true

networks:
  default:
    driver: bridge